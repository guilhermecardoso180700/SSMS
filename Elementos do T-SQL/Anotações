. Transact SQL, extensão do SQL, focada em manipulações de dados mais complexas, como por exemplo Variáveis, comandos de fluxo (While, IF), Loops, Stored Procedures, Funções

1 - Declaração de variáveis
    . Nome iniciado por @
    . Atribuímos o valor através do comando SET, ou através do SELECT

    Exemplo: DECLARE @IDADE INT
             SET @IDADE = 20 

    . Conseguimos exibir a varíavel através do comando PRINT:
            PRINT @IDADE

    . Utilizar as variáveis nas nossas consultas:
        DECLARE @CPF VARCHAR(12) = '1471156710'
        SELECT NOME, * FROM [TABELA DE CLIENTES] WHERE CPF = @CPF

    . Atribuir valor para variáveis através de um SELECT:
        SELECT @NOME2 = NOME, @DATA2 = [DATA DE NASCIMENTO], @IDADE2 = IDADE FROM [TABELA DE CLIENTES] WHERE CPF = @CPF

2 - Função COUNT:
    SELECT @NUMNOTAS = COUNT (*) FROM [NOTAS FISCAIS] WHERE DATA = '2015-01-01'

3 - Controle de FLuxo:
    . IF e ELSE:
        IF boolean
        (SQL)
      ELSE
        (SQL)

    . IF OBJECT_ID ('TABELA_TESTE','U') IS NOT NULL BEGIN = Se a tabela a tabela 'TABELA_TESTE' existir INICIE ...

4 -  Funções com datas:
    . GETDATE()
    . SELECT DATENAME(WEEKDAY, GETDATE())

5 - Controle de FLuxo 2:
    WHILE (boolean)
        BEGIN (SQL)
            IF (SQL)
        BREAK
    END

6 - Tabelas temporárias:
    . Nome inicia com #, ## ou @
        #  - Apenas a conexão atual
        ## - Para mais de uma conexão
        @  - Tabela que será declarada como uma variável, apenas para o bloco de comando atual 

